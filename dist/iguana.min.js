angular.module("Iguana",["SuperModel","ngResource"]).provider("Iguana",function(){this._defaultBaseUrl="",this.setAdapter=function(a){this._defaultAdapterName=a},this.setBaseUrl=function(a){this._defaultBaseUrl=a},this.setDefaultRequestOptions=function(a){this._defaultRequestOptions=a},this.$get=["SuperModel","Iguana.Alias","Iguana.Callbacks","Iguana.Crud","Iguana.Embeds","Iguana.Keys","Iguana.Serializers","Iguana.SingleCollectionInheritance",function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments,1),i=a.subclass(function(){return angular.forEach(h,function(a){this.extend(a.classMixin||{}),this.include(a.instanceMixin||{}),a.included&&a.included(this)}.bind(this)),this.extendableObject("defaultRequestOptions"),this.extend({expect:function(){throw new Error("There is no 'expect' method.  Make sure to include iguana-mock.js and inject MockIguana.")}}),{initialize:function(a){if(void 0===a&&(a={}),"object"!=typeof a||"[object Array]"===Object.prototype.toString.call(a))throw new Error("Expecting to instantiate Iguana class with object, got '"+a+"'");this.copyAttrsOnInitialize(a)},copyAttrsOnInitialize:function(a){this.$$sourceAttrs=a,this.runCallbacks("copyAttrsOnInitialize",function(){this.copyAttrs()})},copyAttrs:function(a){a&&(this.$$sourceAttrs=a),this.runCallbacks("copyAttrs",function(){angular.extend(this,this.$$sourceAttrs)})}}});return this._defaultAdapterName&&i.setAdapter(this._defaultAdapterName),i.setBaseUrl(this._defaultBaseUrl),this._defaultRequestOptions&&angular.forEach(this._defaultRequestOptions,function(a,b){i.defaultRequestOptions().set(b,a)}),i}]}),angular.module("Iguana").factory("Iguana.Adapters.AdapterBase",["$q","SuperModel",function(a,b){return b.subclass(function(){return{initialize:function(a){this.iguanaKlass=a},show:function(a,b,c){throw new Error("Adapter does not support show method")},index:function(a,b,c){throw new Error("Adapter does not support index method")},create:function(a,b){throw new Error("Adapter does not support create method")},update:function(a,b){throw new Error("Adapter does not support update method")},destroy:function(a,b){throw new Error("Adapter does not support destroy method")}}})}]),angular.module("Iguana.Adapters.RestfulIdStyle",["Iguana","ngResource"]).factory("Iguana.Adapters.RestfulIdStyle",["Iguana.Adapters.AdapterBase","$resource","$q",function(a,b,c){return a.subclass(function(){return{name:"Iguana.Adapters.RestfulIdStyle",index:function(a,b,c){return this._makeApiCall(a,"index",b,c)},show:function(a,b,c,d){if(!b)throw new Error("No id provided");return c=c||{},c[this.idProperty]=b,this._makeApiCall(a,"show",c,d)},create:function(a,b,c,d){return this._makeApiCall(a,"create",{record:b,meta:c},d)},update:function(a,b,c,d){return this._makeApiCall(a,"update",{record:b,meta:c},d)},destroy:function(a,b,c){if(!b)throw new Error("No id provided");var d={};return d[this.idProperty]=b,this._makeApiCall(a,"destroy",d,c)},_makeApiCall:function(a,b,d,e){var f=c.defer(),g=this._getResource(a,e),h=this.iguanaKlass.collection;if(!h)throw new Error("No collection defined on iguana class.");var i=g[b];if(!i){var j={collectionName:a,meth:b};throw new Error('No func available for "'+b+'": '+angular.toJson(j))}return i(d,function(a){var b=a.contents;if(!b)throw new Error('Malformed response: "'+angular.toJson(a)+'"');f.resolve({result:b[h]||[],meta:a.meta})},function(a){f.reject(a)}),f.promise},_getResource:function(a,c){var d=[this.iguanaKlass.baseUrl,a,":"+this.idProperty].join("/")+".json";return c=angular.extend({},this.iguanaKlass.defaultRequestOptions(),c||{}),b(d,{},{index:angular.extend({},c,{method:"GET"}),show:angular.extend({},c,{method:"GET"}),create:angular.extend({},c,{method:"POST"}),update:angular.extend({},c,{method:"PUT"}),destroy:angular.extend({},c,{method:"DELETE"})})}}})}]),angular.module("Iguana").factory("Iguana.Alias",["$injector",function(a){return{classMixin:{injectablesMap:{},alias:function(a){if(a){if(this._alias=a,this._aliasedKlasses[a])throw new Error('A klass has already been aliased to "'+a+'".  Cannot alias another to the same name.');this._aliasedKlasses[a]=this}return this._alias},getAliasedKlass:function(b,c){if(angular.isUndefined(c)&&(c=!0),!this._aliasedKlasses[b]){var d=this.injectablesMap[b];if(d&&a.has(d)){var e;if(e=a.get(d),this._aliasedKlasses[b]=e,b!==e.alias()){var f='Class included in injectablesMap does not have the expected alias: "'+e.alias()+'" != "'+b+'"';throw new Error(f)}}}if(!this._aliasedKlasses[b]&&c)throw new Error('No class aliased to "'+b+'".');return this._aliasedKlasses[b]},mapInjectables:function(a){angular.extend(this.injectablesMap,a)},_aliasedKlasses:{}}}}]),angular.module("Iguana").factory("Iguana.Callbacks",[function(){return{included:function(a){a.defineCallbacks("copyAttrs"),a.defineCallbacks("copyAttrsOnInitialize"),a.defineCallbacks("save"),a.defineCallbacks("processEmbeds")}}}]),angular.module("Iguana").factory("Iguana.Crud",["$injector",function(a){var b=a.get("$q");return{included:function(a){a.setIdProperty("id")},classMixin:{setCollection:function(a){this.extend({collection:a})},setAdapter:function(b){var c;try{c=a.get(b)}catch(d){throw new Error('Cannot find adapter "'+b+'"')}this.extend({adapterKlass:c})},setBaseUrl:function(a){a=a.replace(/\/$/,""),this.extend({baseUrl:a})},setIdProperty:function(a){this.extend({idProperty:a})},adapter:function(){if(!this._adapter){if(!this.adapterKlass)throw new Error("No adapter set.  You need to call setAdapter()");this._adapter=new this.adapterKlass(this)}return this._adapter},show:function(){return this._callAdapterMethAndInstantiateResult("show",!0,arguments)},index:function(){return this._callAdapterMethAndInstantiateResult("index",!1,arguments)},create:function(a,b,c){var d=this["new"](a);if(!d.isNew())throw new Error("Cannot call create on instance that is already saved.");return d.save(b,c)},update:function(a,b,c){var d=this["new"](a);if(d.isNew())throw new Error("Cannot call update on instance that is not already saved.");return d.save(b,c)},destroy:function(a,b){var c=[a];return b&&c.push(b),this._callAdapterMeth("destroy",c).then(function(a){return this._prepareEmptyResponse(a)}.bind(this))},saveWithoutInstantiating:function(a,b,c,d){var e=[b];return c&&e.push(c),d&&e.push(d),this._callAdapterMeth(a,e).then(function(a){return{result:a.result[0],meta:a.meta}})},_prepareEmptyResponse:function(a){return{result:null,meta:a.meta}},_callAdapterMethAndInstantiateResult:function(a,b,c){return this._callAdapterMeth(a,c).then(function(a){return this._instantiateFromResponse(b,a)}.bind(this))},_instantiateFromResponse:function(a,b){var c=this._instantiateFromResult(b.result),d=a?c[0]:c;return{result:d,meta:b.meta}},_instantiateFromResult:function(a){if(!a)return[];var b=[];return angular.forEach(a,function(a){b.push(this["new"](a))}.bind(this)),b},_callAdapterMeth:function(a,b){if(!this.collection)throw new Error("Cannot make an api call because collection has not been set.  You need to call setCollection().");return b=Array.prototype.slice.call(b,0),b.unshift(this.collection),this.adapter()[a].apply(this.adapter(),b)}},instanceMixin:{save:function(a,c){var d;return this.runCallbacks("save",function(){var e;this.$$saving=!0,d=this._save(a,c);var f=(new Date).getTime()+":"+Math.random();if(!this.$$savePromise){var g,h;e=b(function(a,b){g=a,h=b}),e.resolve=g,e.reject=h,e.savePromises={},e.errors=[],e["finally"](function(){this.$$saving=!1,this.$$savePromise=void 0}.bind(this)),this.$$savePromise=e}e=this.$$savePromise,e.savePromises[f]=d,d.then(function(){delete e.savePromises[f],0===Object.keys(e.savePromises).length&&(0===e.errors.length?e.resolve():e.reject({errors:e.errors}))},function(a){e.errors.push(a),delete e.savePromises[f],0===Object.keys(e.savePromises).length&&e.reject({errors:e.errors})})}),d},isNew:function(){var a=this[this.idProperty()];return!a},_save:function(a,b){var c=this.isNew()?"create":"update";return this.constructor.saveWithoutInstantiating(c,this.asJson(),a,b).then(function(a){var b=angular.extend({},a.result);return this.copyAttrs(b),{result:this,meta:a.meta}}.bind(this))},destroy:function(a){this.$$destroying=!0,this.$$saving=!0;var b=this.constructor.destroy(this[this.idProperty()],a);return this.$$savePromise=b,b["finally"](function(){this.$$destroying=!1,this.$$saving=!1,this.$$savePromise=void 0}.bind(this)),b},idProperty:function(){return this.constructor.idProperty}}}}]),angular.module("Iguana").factory("Iguana.Embeds",["AClassAbove",function(a){var b=a.subclass({initialize:function(a,b){this.propName=a,this.klassFetcher=b},process:function(a,b){var c=b[this.propName];c&&(b[this.propName]=this._instantiate(a,c))}}),c=b.subclass({_instantiate:function(a,b){var c;if("[object Array]"===Object.prototype.toString.call(b))c=[];else{if("object"!=typeof b)throw new Error('Expecting array or object for embedsMany relationship "'+this.propName+'". Got '+b);c={}}return angular.forEach(b,function(b,d){var e=this.klassFetcher()["new"](b);e.$$embeddedIn=a,c[d]=e}.bind(this)),c}}),d=b.subclass({_instantiate:function(a,b){var c=this.klassFetcher()["new"](b);return c.$$embeddedIn=a,c}});return{included:function(a){a.extendableObject("embedRelationships"),a.setCallback("before","copyAttrs","processEmbeds")},classMixin:{embedsMany:function(a,b){this.embedRelationships().set(a,new c(a,this.getAliasedKlass.bind(this,b)))},embedsOne:function(a,b){this.embedRelationships().set(a,new d(a,this.getAliasedKlass.bind(this,b)))},embeddedIn:function(a){this.extend({_embeddedIn:a});var b={};b[a]=function(){return this.$$embeddedIn},this.include(b)}},instanceMixin:{embedRelationships:function(){return this.constructor.embedRelationships.apply(this.constructor)},processEmbeds:function(){this.runCallbacks("processEmbeds",function(){angular.forEach(this.embedRelationships(),function(a){a.process(this,this.$$sourceAttrs)}.bind(this))})}}}}]),angular.module("Iguana").factory("Iguana.Keys",["$injector",function(){return{classMixin:{defineSetter:function(a,b){var c=this.internalKeyFor(a);this.setCallback("after","copyAttrsOnInitialize",function(){this.hasOwnProperty(a)&&(this[c]=this[a]),Object.defineProperty(this,a,{get:function(){return this.readKey(a)},set:b,enumerable:!0,configurable:!0})})},internalKeyFor:function(a){return"$$___"+a}},instanceMixin:{readKey:function(a){var b=this.constructor.internalKeyFor(a);return this[b]},writeKey:function(a,b){var c=this.constructor.internalKeyFor(a);return this[c]=b,b}}}}]),angular.module("Iguana").factory("Iguana.Serializers",[function(){return{instanceMixin:{asJson:function(){return angular.fromJson(angular.toJson(this))},toJson:function(){return angular.toJson(this)}}}}]),angular.module("Iguana").factory("Iguana.SingleCollectionInheritance",function(){return{included:function(a){a.setCallback("after","copyAttrs",function(){var a=this.constructor.sciProperty;this.constructor.alias()&&!this.hasOwnProperty(a)&&(this[a]=this.constructor.alias())}),a.setCallback("before","copyAttrsOnInitialize",function(){var a=this.$$sourceAttrs;if(!a||!a.$$instantiatedWithNew)throw new Error("Iguana classes must be instantiated with MyKlass.new() rather that new MyKlass()");delete a.$$instantiatedWithNew})},classMixin:{sciProperty:"__iguana_type",setSciProperty:function(a){this.extend({sciProperty:a})},"new":function(a,b){if(a=angular.extend({},a),b!==!1&&(b=!0),void 0===a&&(a={}),"object"!=typeof a||"[object Array]"===Object.prototype.toString.call(a))throw new Error("Expecting to instantiate Iguana class with object, got '"+a+"'");a.$$instantiatedWithNew=!0;var c;if(a.hasOwnProperty(this.sciProperty))if(a[this.sciProperty]&&a[this.sciProperty]===this.alias())c=new this(a);else{var d;if(d=this.getAliasedKlass(a[this.sciProperty],!1),d&&!d.inheritsFrom(this))throw new Error('Cannot instantiate because class "'+d.alias()+'" does not inherit from "'+this.alias()+'."');d&&(c=d["new"](a,!1))}else c=new this(a);if(c)return c;if(b)throw new Error("No class could be found for "+this.sciProperty+'="'+a[this.sciProperty]+'".')}}}});